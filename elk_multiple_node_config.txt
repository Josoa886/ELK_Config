# CONFIGURATION POUR UN MULTISERVEUR POUR ELK

### 1 - Présentation
- Installation et configuration dans de multiples machines: deux au max
- Un pour elasticsearch et l'autre pour kibana et ses plugins
- Installer via tar archive de linux
- elasticsearch V 8.x: La sécurité est activée par défaut
 
### 2 - Installation globale pour ELK (+ Filebeat)
- Installer suivant votre configuration mais il est recommandé d'utiliser l'archive pour linux
- if (installation == linux){
  lier_au_path(ELK_PATH);
} else {
  go_to(configuration);
}

- Lier au path: 
  -> Créer un fichier .extension_nom_terminal: .extension_bash or .extension.fish
  -> nano .extension_nom_terminal
  -> Pour fish: 
          --> set -gx NOMPATH0 /path/to/bin
          --> set -gx PATH $PATH $NOMPATH0
          --> -gx: Pour une configuration globale
  -> Pour bash:
          --> export NOMPATH0=/path/to/bin
          --> export PATH=$PATH:$NOMPATH0
  -> Recommandé: au cas ou il y a au moins deux terminal, veuillez configurer les deux
  -> Ensuite: source .extension_nom_terminal

#### 3 - Pour le serveur elasticsearch
- Run: elasticsearch [Pour une configuration basique]
- Run with systemd:
     -> sudo systemctl enable elasticsearch.service
     -> sudo systemctm start elasticsearch.service

- Run:  elasticsearch-reset-password -i -u elastic
     -> -i: interactive
     -> -u: Username 
- Ou procéder par: elasticsearch-setup-password interactive
  [Au cas ou la sécurité par défaut est defaillant ou n'est pas activée]

- Ensuite: sudo systemctl status elasticsearch [Vérifier si elasticsearch est fonctionnel]
- Après: curl --cacert /etc/elasticsearch/certs/http_ca.crt -u elastic https://localhost:9200
- Ce dernier est fait pour vérifier si elasticsearch est fonctionnel sur votre serveur

## Changer la configuration pour elasticsearch
- GoTo /etc/elasticsearch/elasticsearch.yml:
  -> Faire une copie de votre fichier avant tout elasticsearch.yml.backup 
  -> Changer les configurations suivantes:
     - cluster.name: mon-application
     - node.name: node-1
     - network.host: 172.27.28.15
     ## Avoir son adresse IP: Sur Linux, run: ifconfig
     - http.port: 9200

## Issue: Problème de démarrage du service elasticsearch
- Erreur de démarrage du elasticsearch.service
- GoTo: /usr/lib/systemd/system/
- Run: nano elasticsearch.service
- Si les informations suivantes ne correspondent pas à votre environnement, veuillez les changer:
    -> User=username
    -> Groupe=group
- Run: sudo systemctl daemon-reload
- Run: sudo systemctl status elasticsearch
- Run:! sudo systemctl enable elasticsearch
- Run: sudo systemctl start elasticsearch


### 4 - Pour kibana dans un autre serveur
- Installer kibana
- Vérifier l'intégrité de tous les fichiers dans les dossiers suivants:
  - /usr/share/kibana/  
  - /etc/kibana/
  - /var/lib/kibana
- Créer un token pour kibana: elasticsearch-create-enrollement-token -s kibana
- Run: kibana-setup
- Ensuite run: kibana-encryption-keys generate
- Copier les clés généré dans kibana.yml
- Run: sudo systemctl daemon-reload
- Run: sudo systemctl enable kibana
- Run: sudo systemctl start kibana
- Same as elasticsearch: 
  - goTo: /etc/kibana/kibana.yml
  - Do: cp kibana.yml kibana.yml.backup for the backup file
  - Then nano kibana.yml
- On the kibana.yml: 
  - server.port: 5601
  - server.host: "kibana_IP"
  - elasticsearch.hosts: ["https://localhost:9200"]
  - elasticsearch.username: "kibana_system"
  - elasticsearch.password: "ur_passwd" 
  - elasticsearh.ssl.certificateAuthorities: ["/etc/kibana/certs/http_ca.crt"] (A copier venant de /etc/elasticsearch/certs)
  - server.publicBaseUrl: "http://kibana_ip:5601"

#### Tips: Copie vers un autre serveur ssh
 - mkdir /etc/kibana/certs
 - Do: scp /etc/elasticsearch/certs/http_ca.crt sfi@ip:/etc/kibana/certs
- Ensuite: elasticsearch-reset-password -i -u kibana_system [Definition du mot de passe kibana]
- Then: sudo systemctl restart kibana.service

#### Tips: Ajout automatique d'un nouveau node elasticsearch vers un cluster existant
- ./elasticsearch-create-enrollment-token -s node
- Copier le token generé
- Executer la commande suivant dans le nouveau serveur node elasticsearch:
  -> 
### 5 - Génerer un certificat pem pour votre cluster elasticsearch
- Run ./bin/elasticsearch-certutil ca
- Cela vous donnera le fichier:  elastic-stack-ca.p12 [Sécurisé avec un mot de passe]
- Ensuite run: elasticsearch-certutil cert --ca elastic-stack-ca.p12 [Pour génerer un clé et un certificat privé pour votre node (Single node)]
- Cela vous donnera un  fichier: elastic-certificates.p12
- Ajouter les configurations suivantes dans elasticsearch.yml:
   --> xpack.security.transport.ssl.enabled: true
   --> xpack.security.transport.ssl.client_authentication: required
   --> xpack.security.transport.ssl.verification_mode: certificate
    --> xpack.security.transport.ssl.keystore.path: /path/to/certs/elastic-certificates.p12
    --> xpack.security.transport.ssl.truststore.path: /path/to/certs/elastic-certificates.p12

- Run:  sudo chown root elastic-certificates.p12
- Run: sudo chmod 660 elastic-certificates.p12
    - Then run:
   -->   elasticsearch-keystore add xpack.security.transport.ssl.keystore.secure_password
   -->   elasticsearch-keystore add xpack.security.transport.ssl.truststore.secure_password

--> Remarque: copier le fichier elastic-certificates.p12 et suivre les mêmes instructions dans chaque node de votre cluster elasticsearch

- Ensuite: keytool -importcert -trustcacerts -noprompt -keystore elastic-stack-ca.p12 \ -storepass <password>  -alias new-ca -file ca.crt
- Vérifier la liste de certificat avec: keytool -keystore config/elastic-stack-ca.p12 -list


### 6 - Génerer un certificat pour securiser la connexion entre chaque node
- Ensuite pour un certificat pour chaque node: elasticsearch-certutil http
- Suivre les instructions
- Pour génerer des nouveaux certificats pour toutes vos nodes:
  -> Instructions:
       --> CSR: N[Non]
       --> CA existant : Y [Yes]
       --> Path du CA [.../elastic-stack-ca.p12]
       --> Entrer le mot de passe du CA
       --> Entrer la valeur d'expiration de votre certificat
       --> Génerer un certificat par node: Y [Yes]
       --> Répartition de chaque configuration:
               --> Chaque node possède son propre clé privée
               --> Un hostname spécifique
               --> Une adresse IP spécifique
        --> Après avoir généré vos certificats, veuillez configurer un mot d passe pour votre keystore
        --> Vous obtenez un fichier elasticsearch-ssl-http.zip
        --> Extraire votre fichier: elle doit contenir deux dossiers: "elasticsearch" et "kibana"
        --> Dans kibana se trouve le fichier elasticsearch-ca.pem qui vas être utilisé pour la configuration vers kibana
        --> Configuration de kibana [kibana.yml]: elasticsearch.ssl.certificateAuthorities: KBN_PATH_CONF/certs/elasticsearch-ca.pem
        --> Structure basique pour chaque dossier dans elasticsearch en fonction des noms de vos nodes:
                --> node_name
                       |-- README.txt
                       |-- http.p12
                       |-- sample-elasticsearch.yml
                --> Copier http.p12 dans certs/
                --> Run :  elasticsearch-keystore add xpack.security.http.ssl.keystore.secure_password

### 7 - Securisation de la connexion de kibana avec le serveur
- Run elasticsearch-certutil csr -name kibana-server [Inutile, passer à l'etape suivante]
- The  run: elasticsearch-certutil cert --pem -ca /usr/share/elasticsearch/elastic-stack-ca.p12  -name kibana-server
- Copier le fichier généré kibana-server.crt vers /etc/kibana/certs
- De même pour kibana-server.key
- Lier ces fichiers dans yml:
         --> server.ssl.enabled: true
         --> server.ssl.certificate: /etc/kibana/certs/kibana-server.crt
         --> server.ssl.key: /etccd /kibana/certs/kibana-server.key

### 8 - Self monitoring avec Kibana (Activation)


### 9 - Activer le monitoring avec metricbeat
- Aller dans kibana Management>STack-management
- Si Metricbeat non installé, veuillez l'installer (Via le lien fourni dans kibana)
- Changer le mots de passe pour beats_system dans kibana ou elasticsearch-reset-password -i -u beats_system
- Run:  metricbeat modules list
- En cas d'erreur: metricbeat modules enable elasticsearch-xpack

### 10 - Configuration de fleet server
- Dans votre serveur Kibana: 
  -> Aller dans Menu > Fleet
  -> Aller dans Settings
  -> Ajouter vos serveurs (Host)
  -> Passer à : Add Fleet server
  -> Ouvrir un terminal et executer: elasticsearch-certutil cert --pem -ca /path/to/elastic-stack-ca.p12 -name fleet-server

### 11 - Configuration d'un agent elastic (Elastic AGENT)
- 







####
